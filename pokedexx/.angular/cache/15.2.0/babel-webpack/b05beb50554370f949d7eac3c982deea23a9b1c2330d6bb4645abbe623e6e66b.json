{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar curryRight = require(\"lodash/curryRight\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\n/**\n * This method is like _.curry except that arguments are applied to func in the manner of _.partialRight instead of _.partial.\n * The arity of func may be specified if func.length is not sufficient.\n * The original function is bound to the instance. If the method is needed to call in a different context use `CurryAll`.\n *\n * The _.curryRight.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.\n *\n * Note: This method doesn't set the \"length\" property of curried functions.\n * @param {number} [arity] The arity of func.\n * @example\n *\n * class MyClass {\n *   @CurryRightAll()\n *   add(a, b) {\n *     return (a + b);\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * const add5 = myClass.add(5);\n *\n * add5AndMultiply(10); // => 15\n */\nexports.CurryRightAll = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(curryRight, new applicators_1.PreValueApplicator(), {\n  optionalParams: true\n}));\nexports.curryRightAll = exports.CurryRightAll;\nexports.default = exports.CurryRightAll;","map":{"version":3,"names":["Object","defineProperty","exports","value","curryRight","require","factory_1","applicators_1","CurryRightAll","DecoratorFactory","createDecorator","DecoratorConfig","PreValueApplicator","optionalParams","curryRightAll","default"],"sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/node_modules/lodash-decorators/curryRightAll.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar curryRight = require(\"lodash/curryRight\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\n/**\n * This method is like _.curry except that arguments are applied to func in the manner of _.partialRight instead of _.partial.\n * The arity of func may be specified if func.length is not sufficient.\n * The original function is bound to the instance. If the method is needed to call in a different context use `CurryAll`.\n *\n * The _.curryRight.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.\n *\n * Note: This method doesn't set the \"length\" property of curried functions.\n * @param {number} [arity] The arity of func.\n * @example\n *\n * class MyClass {\n *   @CurryRightAll()\n *   add(a, b) {\n *     return (a + b);\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * const add5 = myClass.add(5);\n *\n * add5AndMultiply(10); // => 15\n */\nexports.CurryRightAll = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(curryRight, new applicators_1.PreValueApplicator(), { optionalParams: true }));\nexports.curryRightAll = exports.CurryRightAll;\nexports.default = exports.CurryRightAll;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,UAAU,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC7C,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACM,aAAa,GAAGF,SAAS,CAACG,gBAAgB,CAACC,eAAe,CAAC,IAAIJ,SAAS,CAACK,eAAe,CAACP,UAAU,EAAE,IAAIG,aAAa,CAACK,kBAAkB,EAAE,EAAE;EAAEC,cAAc,EAAE;AAAK,CAAC,CAAC,CAAC;AAC/KX,OAAO,CAACY,aAAa,GAAGZ,OAAO,CAACM,aAAa;AAC7CN,OAAO,CAACa,OAAO,GAAGb,OAAO,CAACM,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}