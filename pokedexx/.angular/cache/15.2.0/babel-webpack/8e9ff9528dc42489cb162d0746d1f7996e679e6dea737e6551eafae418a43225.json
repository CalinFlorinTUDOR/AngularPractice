{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar attempt = require(\"lodash/attempt\");\nvar partial = require(\"lodash/partial\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar attemptFn = function (fn) {\n  return partial(attempt, fn);\n};\n/**\n * Attempts to invoke func, returning either the result or the caught error object. Any additional arguments are provided to func when it's invoked.\n * @param {...*} [args] The arguments to invoke func with.\n * @example\n *\n * class MyClass {\n *   @Attempt()\n *   fn(value) {\n *     if (typeof value === 'number') {\n *       return value\n *     }\n *\n *     throw new Error();\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.fn(10); // => 10;\n * myClass.fn(null); // => Error\n */\nexports.Attempt = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(attemptFn, new applicators_1.PreValueApplicator(), {\n  optionalParams: true\n}));\nexports.attempt = exports.Attempt;\nexports.default = exports.Attempt;","map":{"version":3,"names":["Object","defineProperty","exports","value","attempt","require","partial","factory_1","applicators_1","attemptFn","fn","Attempt","DecoratorFactory","createDecorator","DecoratorConfig","PreValueApplicator","optionalParams","default"],"sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/node_modules/lodash-decorators/attempt.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attempt = require(\"lodash/attempt\");\nvar partial = require(\"lodash/partial\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar attemptFn = function (fn) { return partial(attempt, fn); };\n/**\n * Attempts to invoke func, returning either the result or the caught error object. Any additional arguments are provided to func when it's invoked.\n * @param {...*} [args] The arguments to invoke func with.\n * @example\n *\n * class MyClass {\n *   @Attempt()\n *   fn(value) {\n *     if (typeof value === 'number') {\n *       return value\n *     }\n *\n *     throw new Error();\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.fn(10); // => 10;\n * myClass.fn(null); // => Error\n */\nexports.Attempt = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(attemptFn, new applicators_1.PreValueApplicator(), {\n    optionalParams: true\n}));\nexports.attempt = exports.Attempt;\nexports.default = exports.Attempt;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,OAAO,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIG,aAAa,GAAGH,OAAO,CAAC,eAAe,CAAC;AAC5C,IAAII,SAAS,GAAG,UAAUC,EAAE,EAAE;EAAE,OAAOJ,OAAO,CAACF,OAAO,EAAEM,EAAE,CAAC;AAAE,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,OAAO,CAACS,OAAO,GAAGJ,SAAS,CAACK,gBAAgB,CAACC,eAAe,CAAC,IAAIN,SAAS,CAACO,eAAe,CAACL,SAAS,EAAE,IAAID,aAAa,CAACO,kBAAkB,EAAE,EAAE;EAC1IC,cAAc,EAAE;AACpB,CAAC,CAAC,CAAC;AACHd,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACS,OAAO;AACjCT,OAAO,CAACe,OAAO,GAAGf,OAAO,CAACS,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}