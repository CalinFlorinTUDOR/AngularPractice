{"ast":null,"code":"import { from } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ApiService {\n  constructor() {\n    this._apiUrl = 'https://pokeapi.co/api/v2';\n  }\n  get(query) {\n    return from(fetch(`${this._apiUrl}${query}`).then(res => res.json()));\n  }\n  getPokemon(id) {\n    return this.get(`/pokemon/${id}`);\n  }\n  getAllPokemons() {\n    return this.get('/pokemon?limit=1281');\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)();\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAoB,MAAM;;AAyBvC,OAAM,MAAOC,UAAU;EAGrBC;IAFQ,YAAO,GAAG,2BAA2B;EAE7B;EAETC,GAAG,CAAIC,KAAa;IACzB,OAAOJ,IAAI,CAACK,KAAK,CAAC,GAAG,IAAI,CAACC,OAAO,GAAGF,KAAK,EAAE,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CAAC;EACzE;EAEOC,UAAU,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACR,GAAG,CAAC,YAAYQ,EAAE,EAAE,CAAC;EACnC;EAEOC,cAAc;IACnB,OAAO,IAAI,CAACT,GAAG,CAAC,qBAAqB,CAAC;EACxC;;AAfWF,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAY,SAAVZ,UAAU;EAAAa,YAFT;AAAM","names":["from","ApiService","constructor","get","query","fetch","_apiUrl","then","res","json","getPokemon","id","getAllPokemons","factory","providedIn"],"sourceRoot":"","sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/src/app/api/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\nexport interface Pokemon {\n  abilities: any[];\n  forms: any[];\n  game_indices: any[];\n  height: number;\n  held_items: any[];\n  id: number;\n  is_default: boolean;\n  location_area_encounters: string;\n  moves: any[];\n  name: string;\n  order: number;\n  past_types: any[];\n  species: any;\n  sprites: any;\n  stats: any[];\n  types: any[];\n  weight: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private _apiUrl = 'https://pokeapi.co/api/v2';\n\n  constructor() { }\n\n  public get<T>(query: string): Observable<T> {\n    return from(fetch(`${this._apiUrl}${query}`).then((res) => res.json()));\n  }\n\n  public getPokemon(id: number): Observable<Pokemon> {\n    return this.get(`/pokemon/${id}`);\n  }\n\n  public getAllPokemons(): Observable<Pokemon[]> {\n    return this.get('/pokemon?limit=1281');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}