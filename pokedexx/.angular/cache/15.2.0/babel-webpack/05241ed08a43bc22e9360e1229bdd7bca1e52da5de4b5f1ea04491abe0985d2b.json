{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar before = require(\"lodash/before\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(before, new applicators_1.PostValueApplicator(), {\n  setter: true\n}));\n/**\n * Creates a function that invokes func, with the this binding and arguments of the created function, while it's called less than n times.\n * Subsequent calls to the created function return the result of the last func invocation.\n * @param {number} n The number of calls at whichc func is no longer invoked.\n * @example\n *\n * let calls = 0;\n *\n * class MyClass {\n *   @BeforeAll(3)\n *   fn() {\n *     calls++;\n *   }\n * }\n *\n * const myClass = new MyClass();\n * const myClass2 = new MyClass();\n *\n * myClass.fn();\n * myClass.fn();\n * myClass.fn();\n * myClass.fn();\n *\n * myClass2.fn();\n *\n * calls === 3; // => true\n */\nfunction BeforeAll(n) {\n  return decorator(n);\n}\nexports.BeforeAll = BeforeAll;\nexports.beforeAll = BeforeAll;\nexports.default = decorator;","map":{"version":3,"names":["Object","defineProperty","exports","value","before","require","factory_1","applicators_1","decorator","DecoratorFactory","createDecorator","DecoratorConfig","PostValueApplicator","setter","BeforeAll","n","beforeAll","default"],"sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/node_modules/lodash-decorators/beforeAll.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar before = require(\"lodash/before\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(before, new applicators_1.PostValueApplicator(), { setter: true }));\n/**\n * Creates a function that invokes func, with the this binding and arguments of the created function, while it's called less than n times.\n * Subsequent calls to the created function return the result of the last func invocation.\n * @param {number} n The number of calls at whichc func is no longer invoked.\n * @example\n *\n * let calls = 0;\n *\n * class MyClass {\n *   @BeforeAll(3)\n *   fn() {\n *     calls++;\n *   }\n * }\n *\n * const myClass = new MyClass();\n * const myClass2 = new MyClass();\n *\n * myClass.fn();\n * myClass.fn();\n * myClass.fn();\n * myClass.fn();\n *\n * myClass2.fn();\n *\n * calls === 3; // => true\n */\nfunction BeforeAll(n) {\n    return decorator(n);\n}\nexports.BeforeAll = BeforeAll;\nexports.beforeAll = BeforeAll;\nexports.default = decorator;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC5C,IAAIG,SAAS,GAAGF,SAAS,CAACG,gBAAgB,CAACC,eAAe,CAAC,IAAIJ,SAAS,CAACK,eAAe,CAACP,MAAM,EAAE,IAAIG,aAAa,CAACK,mBAAmB,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAK,CAAC,CAAC,CAAC;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,CAACC,CAAC,EAAE;EAClB,OAAOP,SAAS,CAACO,CAAC,CAAC;AACvB;AACAb,OAAO,CAACY,SAAS,GAAGA,SAAS;AAC7BZ,OAAO,CAACc,SAAS,GAAGF,SAAS;AAC7BZ,OAAO,CAACe,OAAO,GAAGT,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}