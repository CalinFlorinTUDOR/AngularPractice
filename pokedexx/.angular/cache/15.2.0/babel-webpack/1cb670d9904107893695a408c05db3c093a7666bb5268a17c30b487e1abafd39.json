{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar bind = require(\"lodash/bind\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\n/**\n * Creates a function that invokes func with the this binding of thisArg and partials prepended to the arguments it receives.\n *\n * The _.bind.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for partially applied arguments.\n *\n * Note: Unlike native Function#bind, this method doesn't set the \"length\" property of bound functions.\n * @param {...*} [partials] The argument to be partially applied.\n * @example\n *\n * class MyClass {\n *   @Bind()\n *   bound() {\n *     return this;\n *   }\n *\n *   unbound() {\n *     return this;\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.bound.call(null); // => myClass {}\n * myClass.unbound.call(null); // => null\n */\nexports.Bind = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(bind, new applicators_1.BindApplicator(), {\n  optionalParams: true\n}));\nexports.bind = exports.Bind;\nexports.default = exports.Bind;","map":{"version":3,"names":["Object","defineProperty","exports","value","bind","require","factory_1","applicators_1","Bind","DecoratorFactory","createInstanceDecorator","DecoratorConfig","BindApplicator","optionalParams","default"],"sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/node_modules/lodash-decorators/bind.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bind = require(\"lodash/bind\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\n/**\n * Creates a function that invokes func with the this binding of thisArg and partials prepended to the arguments it receives.\n *\n * The _.bind.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for partially applied arguments.\n *\n * Note: Unlike native Function#bind, this method doesn't set the \"length\" property of bound functions.\n * @param {...*} [partials] The argument to be partially applied.\n * @example\n *\n * class MyClass {\n *   @Bind()\n *   bound() {\n *     return this;\n *   }\n *\n *   unbound() {\n *     return this;\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.bound.call(null); // => myClass {}\n * myClass.unbound.call(null); // => null\n */\nexports.Bind = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(bind, new applicators_1.BindApplicator(), {\n    optionalParams: true\n}));\nexports.bind = exports.Bind;\nexports.default = exports.Bind;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACM,IAAI,GAAGF,SAAS,CAACG,gBAAgB,CAACC,uBAAuB,CAAC,IAAIJ,SAAS,CAACK,eAAe,CAACP,IAAI,EAAE,IAAIG,aAAa,CAACK,cAAc,EAAE,EAAE;EACtIC,cAAc,EAAE;AACpB,CAAC,CAAC,CAAC;AACHX,OAAO,CAACE,IAAI,GAAGF,OAAO,CAACM,IAAI;AAC3BN,OAAO,CAACY,OAAO,GAAGZ,OAAO,CAACM,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}