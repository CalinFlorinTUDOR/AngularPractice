{"ast":null,"code":"import { FetchDataAction } from 'src/app/store/models/actions/pokemons.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../api/api.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/pokemon\", a1];\n};\nfunction DataWrapperComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"a\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pokemon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, pokemon_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r1.name, \" \");\n  }\n}\nexport class DataWrapperComponent {\n  constructor(apiService, store) {\n    this.apiService = apiService;\n    this.store = store;\n    this.data = undefined;\n    this.pokemons = [];\n    this.count = 0;\n    this.totalPages = 0;\n    this.currentPage = 1;\n    // INFO: Before fetching data we are checking if the NGRX store already has that page memoized\n    this.store.select(\"fetchedData\").subscribe(fetchedData => {\n      if (fetchedData[this.currentPage]) {\n        this.data = fetchedData;\n      }\n    });\n  }\n  ngOnInit() {\n    /*\n    *   * If this data doesnt contain anything fetch first page api\n    * */\n    if (!this.data?.[this.currentPage]) {\n      this.fetchPokemons('/pokemon');\n    }\n  }\n  /* next/back logic\n   * Increase the page number each time\n   * also fetch data with the url provided by the api for next or previous\n   */\n  nextPage() {\n    if (this.currentPage === this.totalPages) {\n      return;\n    }\n    const nextPageUrl = this.data?.[this.currentPage].next.split('v2')[1];\n    this.currentPage += 1;\n    this.fetchPokemons(nextPageUrl);\n  }\n  previousPage() {\n    if (this.currentPage === 1) {\n      return;\n    }\n    const previousPageUrl = this.data?.[this.currentPage].previous.split('v2')[1];\n    this.currentPage -= 1;\n    this.fetchPokemons(previousPageUrl);\n  }\n  /*\n   * main api service subscription\n   * if this.data already has data for the page your are currently on\n   * it will not fetch just re render data with the assignPokemonId function\n   */\n  fetchPokemons(url) {\n    if (this.data?.[this.currentPage]) {\n      this.assignPokemonId(this.data[this.currentPage]);\n      return;\n    }\n    this.apiService.get(url).subscribe(res => {\n      this.data = {\n        [this.currentPage]: res\n      };\n      this.store.dispatch(FetchDataAction({\n        payload: res,\n        page: this.currentPage\n      }));\n      this.assignPokemonId(res);\n    });\n  }\n  assignPokemonId(data) {\n    this.pokemons = data.results.map((pokemon, index) => {\n      const id = index + 1;\n      return {\n        ...pokemon,\n        id\n      };\n    });\n    this.count = data.count;\n    this.totalPages = Math.ceil(this.count / 20);\n  }\n}\nDataWrapperComponent.ɵfac = function DataWrapperComponent_Factory(t) {\n  return new (t || DataWrapperComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Store));\n};\nDataWrapperComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataWrapperComponent,\n  selectors: [[\"app-data-wrapper\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[1, \"page\"], [1, \"data-wrapper\"], [\"class\", \"data-wrapper__title\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination\"], [3, \"click\"], [1, \"data-wrapper__title\"], [3, \"routerLink\"]],\n  template: function DataWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, DataWrapperComponent_div_2_Template, 3, 4, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function DataWrapperComponent_Template_button_click_5_listener() {\n        return ctx.previousPage();\n      });\n      i0.ɵɵtext(6, \"Prev\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function DataWrapperComponent_Template_button_click_7_listener() {\n        return ctx.nextPage();\n      });\n      i0.ɵɵtext(8, \"Next\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pokemons);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate3(\" Pokemons: \", ctx.count, \" TotalPages:\", ctx.totalPages, \" CurrentPage: \", ctx.currentPage, \" \");\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterLink],\n  styles: [\".data-wrapper[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-gap: 1rem;\\n  margin: 1rem;\\n  padding: 1rem;\\n  align-items: center;\\n  justify-items: center;\\n  font-size: 24px;\\n}\\n.data-wrapper[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #000000;\\n  text-decoration: none;\\n}\\n.data-wrapper[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  color: #090909;\\n  text-decoration: underline;\\n}\\n.data-wrapper[_ngcontent-%COMP%]   .pagination[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 1rem;\\n  padding: 1rem;\\n  font-size: 24px;\\n}\\n.data-wrapper[_ngcontent-%COMP%]   .pagination[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #000000;\\n  text-decoration: none;\\n}\\n.data-wrapper[_ngcontent-%COMP%]   .pagination[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  color: #090909;\\n  text-decoration: underline;\\n}\\n\\n.page[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 1rem;\\n  justify-content: center;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXRhLXdyYXBwZXIvZGF0YS13cmFwcGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUFDRjtBQUFFO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0FBRUo7QUFESTtFQUNFLGNBQUE7RUFDQSwwQkFBQTtBQUdOO0FBQ0U7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtBQUNKO0FBQUk7RUFDRSxjQUFBO0VBQ0EscUJBQUE7QUFFTjtBQURNO0VBQ0UsY0FBQTtFQUNBLDBCQUFBO0FBR1I7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLHNCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YS13cmFwcGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICBncmlkLWdhcDogMXJlbTtcbiAgbWFyZ2luOiAxcmVtO1xuICBwYWRkaW5nOiAxcmVtO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgYSB7XG4gICAgY29sb3I6ICMwMDAwMDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICMwOTA5MDk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cblxuICAucGFnaW5hdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbjogMXJlbTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBhIHtcbiAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMDkwOTA5O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi5wYWdlIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMXJlbTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,+CAA+C;;;;;;;;;;;ICA3EC,8BAAkE;IAE9DA,YACF;IAAAA,iBAAI;;;;IAFDA,eAAuC;IAAvCA,sEAAuC;IACxCA,eACF;IADEA,gDACF;;;ADmBN,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,UAAsB,EAAUC,KAA4C;IAA5E,eAAU,GAAVD,UAAU;IAAsB,UAAK,GAALC,KAAK;IANlD,SAAI,GAA8BC,SAAS;IAC3C,aAAQ,GAAc,EAAE;IACxB,UAAK,GAAW,CAAC;IACjB,eAAU,GAAW,CAAC;IACtB,gBAAW,GAAW,CAAC;IAG5B;IACA,IAAI,CAACD,KAAK,CAACE,MAAM,CAAC,aAAa,CAAC,CAACC,SAAS,CAAEC,WAAmC,IAAI;MACjF,IAAIA,WAAW,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;QACjC,IAAI,CAACC,IAAI,GAAGF,WAAW;;IAE3B,CAAC,CAAC;EACJ;EAEAG,QAAQ;IACN;;;IAGA,IAAI,CAAC,IAAI,CAACD,IAAI,GAAG,IAAI,CAACD,WAAW,CAAC,EAAE;MAClC,IAAI,CAACG,aAAa,CAAC,UAAU,CAAC;;EAIlC;EAGA;;;;EAIOC,QAAQ;IACb,IAAI,IAAI,CAACJ,WAAW,KAAK,IAAI,CAACK,UAAU,EAAE;MACxC;;IAGF,MAAMC,WAAW,GAAG,IAAI,CAACL,IAAI,GAAG,IAAI,CAACD,WAAW,CAAC,CAACO,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,CAACR,WAAW,IAAI,CAAC;IACrB,IAAI,CAACG,aAAa,CAACG,WAAW,CAAC;EAEjC;EAEOG,YAAY;IACjB,IAAI,IAAI,CAACT,WAAW,KAAK,CAAC,EAAE;MAC1B;;IAGF,MAAMU,eAAe,GAAG,IAAI,CAACT,IAAI,GAAG,IAAI,CAACD,WAAW,CAAC,CAACW,QAAS,CAACH,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9E,IAAI,CAACR,WAAW,IAAI,CAAC;IACrB,IAAI,CAACG,aAAa,CAACO,eAAe,CAAC;EACrC;EAEA;;;;;EAKQP,aAAa,CAACS,GAAW;IAC/B,IAAI,IAAI,CAACX,IAAI,GAAG,IAAI,CAACD,WAAW,CAAC,EAAE;MACjC,IAAI,CAACa,eAAe,CAAC,IAAI,CAACZ,IAAI,CAAC,IAAI,CAACD,WAAW,CAAC,CAAC;MACjD;;IAGF,IAAI,CAACN,UAAU,CAACoB,GAAG,CAACF,GAAG,CAAC,CAACd,SAAS,CAAEiB,GAAQ,IAAI;MAC9C,IAAI,CAACd,IAAI,GAAG;QAAE,CAAC,IAAI,CAACD,WAAW,GAAGe;MAAG,CAAE;MACvC,IAAI,CAACpB,KAAK,CAACqB,QAAQ,CAAC1B,eAAe,CAAC;QAAE2B,OAAO,EAAEF,GAAG;QAAEG,IAAI,EAAE,IAAI,CAAClB;MAAW,CAAE,CAAC,CAAC;MAC9E,IAAI,CAACa,eAAe,CAACE,GAAG,CAAC;IAC3B,CAAC,CAAC;EACJ;EAEQF,eAAe,CAACZ,IAAS;IAC/B,IAAI,CAACkB,QAAQ,GAAGlB,IAAI,CAACmB,OAAO,CAACC,GAAG,CAAC,CAACC,OAAY,EAAEC,KAAU,KAAI;MAC5D,MAAMC,EAAE,GAAGD,KAAK,GAAG,CAAC;MACpB,OAAO;QACL,GAAGD,OAAO;QACVE;OACD;IACH,CAAC,CAAC;IACF,IAAI,CAACC,KAAK,GAAGxB,IAAI,CAACwB,KAAK;IACvB,IAAI,CAACpB,UAAU,GAAGqB,IAAI,CAACC,IAAI,CAAC,IAAI,CAACF,KAAK,GAAG,EAAE,CAAC;EAE9C;;AAlFWjC,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCxBjCzC,kCAAsB;MAElBA,qEAIM;MACRA,iBAAM;MACNA,8BAAwB;MACtBA,YAGA;MAAAA,iCAAiC;MAAzBA;QAAA,OAAS0C,kBAAc;MAAA,EAAC;MAAC1C,oBAAI;MAAAA,iBAAS;MAC9CA,iCAA6B;MAArBA;QAAA,OAAS0C,cAAU;MAAA,EAAC;MAAC1C,oBAAI;MAAAA,iBAAS;;;MAXjBA,eAAW;MAAXA,sCAAW;MAOpCA,eAGA;MAHAA,uHAGA","names":["FetchDataAction","i0","DataWrapperComponent","constructor","apiService","store","undefined","select","subscribe","fetchedData","currentPage","data","ngOnInit","fetchPokemons","nextPage","totalPages","nextPageUrl","next","split","previousPage","previousPageUrl","previous","url","assignPokemonId","get","res","dispatch","payload","page","pokemons","results","map","pokemon","index","id","count","Math","ceil","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/src/app/components/data-wrapper/data-wrapper.component.ts","/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/src/app/components/data-wrapper/data-wrapper.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { FetchDataAction } from 'src/app/store/models/actions/pokemons.actions';\nimport { ApiService } from '../../api/api.service';\nimport { FetchResponse } from 'src/app/store/reducers/fetchedData.reducer';\n\nexport interface PokemonResponse {\n  count: number;\n  next: string;\n  previous: string | null;\n  results: Pokemon[];\n}\n\nexport type Pokemon = {\n  name: string;\n  url: string;\n  id: number;\n};\n\n@Component({\n  selector: 'app-data-wrapper',\n  templateUrl: './data-wrapper.component.html',\n  styleUrls: ['./data-wrapper.component.scss'],\n})\nexport class DataWrapperComponent implements OnInit {\n  public data: FetchResponse | undefined = undefined;\n  public pokemons: Pokemon[] = [];\n  public count: number = 0;\n  public totalPages: number = 0;\n  public currentPage: number = 1;\n\n  constructor(private apiService: ApiService, private store: Store<{ fetchedData: FetchResponse }>) {\n    // INFO: Before fetching data we are checking if the NGRX store already has that page memoized\n    this.store.select(\"fetchedData\").subscribe((fetchedData: Partial<FetchResponse>) => {\n      if (fetchedData[this.currentPage]) {\n        this.data = fetchedData\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    /* \n*   * If this data doesnt contain anything fetch first page api\n* */\n    if (!this.data?.[this.currentPage]) {\n      this.fetchPokemons('/pokemon');\n    }\n\n\n  }\n\n\n  /* next/back logic\n   * Increase the page number each time\n   * also fetch data with the url provided by the api for next or previous\n   */\n  public nextPage() {\n    if (this.currentPage === this.totalPages) {\n      return;\n    }\n\n    const nextPageUrl = this.data?.[this.currentPage].next.split('v2')[1];\n    this.currentPage += 1;\n    this.fetchPokemons(nextPageUrl);\n\n  }\n\n  public previousPage() {\n    if (this.currentPage === 1) {\n      return;\n    }\n\n    const previousPageUrl = this.data?.[this.currentPage].previous!.split('v2')[1];\n    this.currentPage -= 1;\n    this.fetchPokemons(previousPageUrl);\n  }\n\n  /*\n   * main api service subscription\n   * if this.data already has data for the page your are currently on \n   * it will not fetch just re render data with the assignPokemonId function \n   */\n  private fetchPokemons(url: string) {\n    if (this.data?.[this.currentPage]) {\n      this.assignPokemonId(this.data[this.currentPage])\n      return\n    }\n\n    this.apiService.get(url).subscribe((res: any) => {\n      this.data = { [this.currentPage]: res }\n      this.store.dispatch(FetchDataAction({ payload: res, page: this.currentPage }))\n      this.assignPokemonId(res)\n    });\n  }\n\n  private assignPokemonId(data: any) {\n    this.pokemons = data.results.map((pokemon: any, index: any) => {\n      const id = index + 1;\n      return {\n        ...pokemon,\n        id,\n      };\n    });\n    this.count = data.count;\n    this.totalPages = Math.ceil(this.count / 20);\n\n  }\n\n\n}\n","<section class=\"page\">\n  <div class=\"data-wrapper\">\n    <div *ngFor=\"let pokemon of pokemons\" class=\"data-wrapper__title\">\n      <a [routerLink]=\"['/pokemon', pokemon.id]\">\n        {{ pokemon.name }}\n      </a>\n    </div>\n  </div>\n  <div class=\"pagination\">\n    Pokemons: {{ count }} TotalPages:{{ totalPages }} CurrentPage:\n    {{ currentPage }}\n\n    <button (click)=\"previousPage()\">Prev</button>\n    <button (click)=\"nextPage()\">Next</button>\n  </div>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}