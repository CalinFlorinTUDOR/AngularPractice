{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar flip = require(\"lodash/flip\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flip, new applicators_1.PartialValueApplicator(), {\n  property: true\n}));\n/**\n * Creates a function that invokes func with arguments reversed. Honestly, there is probably not much\n * use for this decorator but maybe you will find one?\n *\n * @example\n *\n * class MyClass {\n *   value = 100;\n *\n *   @Flip('fn')\n *   fn2: (b: number, a: string) => [ number, string ];\n *\n *   fn(a: string, b: number): [ string, number ] {\n *     return [ a, b ];\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.fn2(10, '20'); // => [ '20', 10 ]\n */\nfunction Flip(fn) {\n  return decorator(fn);\n}\nexports.Flip = Flip;\nexports.flip = Flip;\nexports.default = decorator;","map":{"version":3,"names":["Object","defineProperty","exports","value","flip","require","factory_1","applicators_1","decorator","DecoratorFactory","createInstanceDecorator","DecoratorConfig","PartialValueApplicator","property","Flip","fn","default"],"sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/node_modules/lodash-decorators/flip.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flip = require(\"lodash/flip\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flip, new applicators_1.PartialValueApplicator(), { property: true }));\n/**\n * Creates a function that invokes func with arguments reversed. Honestly, there is probably not much\n * use for this decorator but maybe you will find one?\n *\n * @example\n *\n * class MyClass {\n *   value = 100;\n *\n *   @Flip('fn')\n *   fn2: (b: number, a: string) => [ number, string ];\n *\n *   fn(a: string, b: number): [ string, number ] {\n *     return [ a, b ];\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.fn2(10, '20'); // => [ '20', 10 ]\n */\nfunction Flip(fn) {\n    return decorator(fn);\n}\nexports.Flip = Flip;\nexports.flip = Flip;\nexports.default = decorator;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC5C,IAAIG,SAAS,GAAGF,SAAS,CAACG,gBAAgB,CAACC,uBAAuB,CAAC,IAAIJ,SAAS,CAACK,eAAe,CAACP,IAAI,EAAE,IAAIG,aAAa,CAACK,sBAAsB,EAAE,EAAE;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAI,CAACC,EAAE,EAAE;EACd,OAAOP,SAAS,CAACO,EAAE,CAAC;AACxB;AACAb,OAAO,CAACY,IAAI,GAAGA,IAAI;AACnBZ,OAAO,CAACE,IAAI,GAAGU,IAAI;AACnBZ,OAAO,CAACc,OAAO,GAAGR,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}