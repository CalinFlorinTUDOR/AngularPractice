{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar flow = require(\"lodash/flow\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flow, new applicators_1.ComposeApplicator({\n  post: true\n}), {\n  property: true\n}));\n/**\n * Creates a function that returns the result of invoking the given functions with the this binding of the created function,\n * where each successive invocation is supplied the return value of the previous.\n *\n * @example\n *\n * class MyClass {\n *   name = 'Ted';\n *\n *   @Flow('getName', toUpperCase)\n *   getUpperCaseName: () => string;\n *\n *   getName() {\n *     return this.name;\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.getUpperCaseName(); // => 'TED'\n */\nfunction Flow() {\n  var fns = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    fns[_i] = arguments[_i];\n  }\n  return decorator.apply(void 0, fns);\n}\nexports.Flow = Flow;\nexports.flow = Flow;\nexports.default = decorator;","map":{"version":3,"names":["Object","defineProperty","exports","value","flow","require","factory_1","applicators_1","decorator","DecoratorFactory","createInstanceDecorator","DecoratorConfig","ComposeApplicator","post","property","Flow","fns","_i","arguments","length","apply","default"],"sources":["/home/kalidevi/Documents/GitHub/AngularPractice/pokedexx/node_modules/lodash-decorators/flow.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flow = require(\"lodash/flow\");\nvar factory_1 = require(\"./factory\");\nvar applicators_1 = require(\"./applicators\");\nvar decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flow, new applicators_1.ComposeApplicator({ post: true }), { property: true }));\n/**\n * Creates a function that returns the result of invoking the given functions with the this binding of the created function,\n * where each successive invocation is supplied the return value of the previous.\n *\n * @example\n *\n * class MyClass {\n *   name = 'Ted';\n *\n *   @Flow('getName', toUpperCase)\n *   getUpperCaseName: () => string;\n *\n *   getName() {\n *     return this.name;\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.getUpperCaseName(); // => 'TED'\n */\nfunction Flow() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return decorator.apply(void 0, fns);\n}\nexports.Flow = Flow;\nexports.flow = Flow;\nexports.default = decorator;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC5C,IAAIG,SAAS,GAAGF,SAAS,CAACG,gBAAgB,CAACC,uBAAuB,CAAC,IAAIJ,SAAS,CAACK,eAAe,CAACP,IAAI,EAAE,IAAIG,aAAa,CAACK,iBAAiB,CAAC;EAAEC,IAAI,EAAE;AAAK,CAAC,CAAC,EAAE;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAI,GAAG;EACZ,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC1CD,GAAG,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;EAC3B;EACA,OAAOT,SAAS,CAACY,KAAK,CAAC,KAAK,CAAC,EAAEJ,GAAG,CAAC;AACvC;AACAd,OAAO,CAACa,IAAI,GAAGA,IAAI;AACnBb,OAAO,CAACE,IAAI,GAAGW,IAAI;AACnBb,OAAO,CAACmB,OAAO,GAAGb,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}